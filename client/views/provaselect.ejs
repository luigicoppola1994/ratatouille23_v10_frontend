<!DOCTYPE html>
<html>
<head>

  

	<title>Autocompletamento prodotto OpenFoodFacts</title>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="../custom/js/globals.js"></script>
	
  <style>




  .card {
  background-color: #ffffff;
  border-radius: 8px;
  box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.1);
  padding: 16px;
  width: 400px;
}

label {
  display: block;
  font-weight: bold;
  margin-bottom: 10px;
  margin-top: 20px;

}

/* Stile dell'input di testo */
.tag-input input[type="text"] {
  border: none;
  padding: 10px;
  font-size: 16px;
  width: 100%;
  outline: none;
}

/* Stile del contenitore dell'input tags */
.tag-input-container {
  margin-top: 20px;
  border: 1px solid #ddd;
  border-radius: 5px;
  padding: 10px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
}

/* Stile del contenitore dei tag */
.tags-container {
  display: flex;
  flex-wrap: wrap;
  margin-top: 10px;
}

/* Stile di ogni tag */
.tag {
  background-color: #43aca0;
  color: #fff;
  font-size: 14px;
  padding: 5px 10px;
  border-radius: 3px;
  margin-right: 5px;
  margin-bottom: 5px;
  display: flex;
  align-items: center;
}

/* Stile dell'icona di cancellazione del tag */
.tag .tag-close {
  margin-left: 5px;
  cursor: pointer;
}

/* Stile del placeholder dell'input di testo */
.tag-input input[type="text"]::placeholder {
  color: #999;
}



/* allergeni */
body {
        font-family: Arial, sans-serif;
        background-color: #43aca0;
      }

      table {
        border-collapse: collapse;
        margin: 20px 0;
        background-color: #43aca0;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.15);
      }

      th,
      td {
        padding: 10px 15px;
        text-align: left;
        border-bottom: 1px solid #ddd;
      }

      th {
        background-color: #f2f2f2;
        font-weight: bold;
      }

      input[type=checkbox] {
        margin: 0;
        vertical-align: middle;
      }

      button {
        padding: 10px;
        border: none;
        border-radius: 4px;
        background-color: #43aca0;
        color: #fff;
        font-weight: bold;
        cursor: pointer;
      }

      button:hover {
        background-color: #43aca0;
      }



    /* Categoria*/
      .select-container {
  display: flex;
  align-items: center;
}

#my-select {
  margin-right: 10px;
}

#add-button {
  background-color: #43aca0;
  color: white;
  border: none;
  padding: 8px 16px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-size: 16px;
  border-radius: 4px;
  cursor: pointer;
}






h2 {
  margin-top: 0;
}

select {
  width: 100%;
  padding: 8px;
  border-radius: 4px;
  border: 1px solid #ccc;
  margin-bottom: 16px;
  font-size: 16px;
}

.input-container {
  display: flex;
  align-items: center;
}

label {
  margin-right: 8px;
  font-size: 16px;
}


button {
  background-color: #43aca0;
  color: white;
  border: none;
  border-radius: 4px;
  padding: 8px 16px;
  font-size: 16px;
  cursor: pointer;
}

button:hover {
  background-color: #43aca0;
}




/* GESTISCE L'INPUT PORTATA*/
#search {
  box-sizing: border-box;
  width: 100%;
  height: 40px;
  padding: 10px;
  border: 1px solid #ccc;
  border-radius: 4px;
  font-size: 16px;
  font-family: Arial, sans-serif;
  background-color: #fff;
  color: #333;
  outline: none;
}

#product-list {
  position: absolute;
  list-style-type: none;
  margin: 0;
  padding: 0;
  border: 1px solid #ccc;
  border-radius: 4px;
  background-color: #fff;
  z-index: 1;
  width: 100%;
  max-height: 200px;
  overflow-y: auto;
}

#product-list li {
  padding: 10px;
  cursor: pointer;
}

#product-list li:hover {
  background-color: #f2f2f2;
}

ul#product-list {
  max-width: 100%; /* l'elemento pu√≤ espandersi fino alla larghezza massima disponibile */
  width: inherit;
}









</style>

  </style>

</head>
<body onload="generateListAllergens()">
 

 

  <div class="card">
     
    <!--  PORTATA PRODOTTO -->
    <label for="search">Nome Portata:</label>
    <input type="text" id="search" name="search" autocomplete="off">
    
    <ul id="product-list"></ul>
  
    
   


    <!--  INGREDIENTI -->
    <label>Descrizione:</label>
    <div class="tag-input-container">
      <div class="tag-input">
        <input type="text" id="tag-input" placeholder="Clicca ENTER per aggiungere l'ingrediente.">
        <input type="hidden" id="descrizione" name="descrizione">
      </div>
      <div class="tags-container"></div>
    </div>

    










    <section>
           
      <details>
      <summary>
      Vuoi aggiungere allergeni?
      </summary>
      <p>
        <table id="checkbox-table">
          <thead>
            
          </thead>
          <tbody></tbody>
        </table>
          </p>
      </details>
     
      </section>


      <style>

section {
  max-width: 450px;
  margin-top: 20px;
}

details {
  background:#43aca0;
  color: white;
  padding: 15px;
  margin-bottom: 2px;
  border-radius: 25px;
}

summary {
  cursor: pointer;
  font-weight: 900;
  font-size: 1.2em;
}
      </style>







   <!-- CATEGORIA -->
     


   
    <h2>Seleziona un elemento:</h2>
    <select id="select_elementi"></select>
    <div class="input-container">
      <label for="input_nuovo_elemento">Aggiungi:</label>
      <input type="text" id="input_nuovo_elemento">
      <button type="button" id="btn_aggiungi">Aggiungi</button>
    </div>

    <h2>Costo:</h2>
    <input type="text"></input>
<br><br>
    <button> Crea Portata </button>


 

  

  <script>
    const elementi = [
      {id: 1, nome: "Elemento 1"},
      {id: 2, nome: "Elemento 2"},
      {id: 3, nome: "Elemento 3"},
      {id: 4, nome: "Elemento 4"},
      {id: 5, nome: "Elemento 5"}
    ];

    const selectElementi = document.getElementById("select_elementi");
    const inputNuovoElemento = document.getElementById("input_nuovo_elemento");
    const btnAggiungi = document.getElementById("btn_aggiungi");

    // Popola la select con gli elementi
    for (const elemento of elementi) {
      const option = document.createElement("option");
      option.value = elemento.id;
      option.text = elemento.nome;
      selectElementi.add(option);
    }

    // Aggiungi un nuovo elemento alla select
    btnAggiungi.addEventListener("click", (event) => {
      event.preventDefault();
      const nuovoElemento = inputNuovoElemento.value.trim();

      if (nuovoElemento !== "") {
        const nuovoId = Math.max(...elementi.map(el => el.id)) + 1;
        const nuovoElementoObj = {id: nuovoId, nome: nuovoElemento};
        elementi.push(nuovoElementoObj);

        const option = document.createElement("option");
        option.value = nuovoElementoObj.id;
        option.text = nuovoElementoObj.nome;
        selectElementi.add(option);

        inputNuovoElemento.value = "";
      }
    });
  
  </script>




  
    
  

  </div>
    



<script>
const tagInput = document.querySelector('#tag-input');
const tagsContainer = document.querySelector('.tags-container');
const descrizioneInput = document.querySelector('#descrizione');

let tags = [];

tagInput.addEventListener('keydown', (event) => {
  if (event.key === 'Enter') {
    event.preventDefault();
    const tag = tagInput.value.trim();
    if (tag !== '') {
      tags.push(tag);
      tagInput.value = '';
      renderTags();
    }
  }
});

function renderTags() {
  tagsContainer.innerHTML = '';
  tags.forEach((tag, index) => {
    const tagElement = document.createElement('div');
    tagElement.classList.add('tag');
    tagElement.innerHTML = `
      <span class="tag-name">${tag}</span>
      <span class="tag-remove" data-index="${index}">&times;</span>
    `;
    tagElement.querySelector('.tag-remove').addEventListener('click', (event) => {
      const index = parseInt(event.target.getAttribute('data-index'));
      tags.splice(index, 1);
      renderTags();
    });
    tagsContainer.appendChild(tagElement);
  });
  descrizioneInput.value = tags.join(', ');
}

	</script>



  
  <script>
    const searchInput = document.querySelector('#search');
    const productList = document.querySelector('#product-list');
    
  
    searchInput.addEventListener('input', async (event) => {
      const searchTerm = event.target.value;
      if (searchTerm.length < 2) {
        productList.innerHTML = '';
        return;
      }
  
      const response = await fetch(`https://it.openfoodfacts.org/cgi/search.pl?search_terms=${searchTerm}&search_simple=1&action=process&json=1&fields=product_name_it`);
      const data = await response.json();
      const products = data.products.filter(product => {
        const productName = product.product_name_it;
        return productName && (productName.toLowerCase() === searchTerm.toLowerCase() || productName.toLowerCase().startsWith(`${searchTerm.toLowerCase()} `));
      });
  
      productList.innerHTML = '';
      products.forEach(product => {
        const li = document.createElement('li');
        li.textContent = product.product_name_it;
        li.addEventListener('click', () => {
          searchInput.value = product.product_name_it;
          productList.innerHTML = '';
        });
        productList.appendChild(li);
      });
    });
  
    // Nasconde la lista dei prodotti quando si clicca fuori dall'input
    document.addEventListener('click', (event) => {
      if (event.target !== searchInput && event.target !== productList) {
        productList.innerHTML = '';
      }
    });
  </script>

  

</body>
</html>

